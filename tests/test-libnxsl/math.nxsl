/* Math functions testing */
x = -5;
y = 22;
assert(x + y == 17);
assert(x - 1 == -6);
assert(x * y == -110);
assert(-y == -22);
assert(y / 2 == 11);
assert(y \ 3 == 7);
assert(y % 3 == 1);
assert(lower(y / 0) == "inf");
assert(lower(x / 0) == "-inf");

try
{
   z = x \ 0;
}
catch
{
   assert($errorcode == 9);
}

try
{
   z = x % 0;
}
catch
{
   assert($errorcode == 9);
}

assert(Math::Pow(y, 2) == y * y);
assert(Math::Pow(y, 4) == y * y * y * y);
assert(Math::Pow(x, -1) == -0.2);

assert(Math::Abs(x) == 5);
assert(Math::Abs(y) == 22);

assert(Math::Log(1) == 0);
assert(Math::Ceil(Math::Log(100)) == 5);

assert(Math::Log10(1) == 0);
assert(Math::Log10(100) == 2);

assert(Math::Round(0.2) == 0);
assert(Math::Round(0.7) == 1);

assert(Math::Floor(0.345) == 0);
assert(Math::Floor(0.7) == 0);

assert(Math::Ceil(0.0001) == 1);
assert(Math::Ceil(0.75) == 1);

assert(Math::Min(x, y, x * y, 1000, 254, -100000) == -100000);
assert(Math::Max(x, y, x * y, 1000, 254, -100000) == 1000);

return 0;
